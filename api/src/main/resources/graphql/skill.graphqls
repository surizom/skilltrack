type Skill{
    id: ID!,
    name: String!,
    importance: SkillImportance!
    resourceUrl: String,
    evaluations: [SkillEvaluation]
}

enum SkillImportance{
    Optional,
    Good_to_know,
    Important,
    Vital
}

type SkillEvaluation{
    skillId: Int!
    timestamp: Int!
    level: Int!
}

type Query{
    skills(count: Int): [Skill]
    skill(id: ID): Skill
    evaluations(skillId:Int): [SkillEvaluation]
}

type Mutation {
    createSkill(name: String!,importance: SkillImportance!, resourceUrl: String): Skill
    evaluateSkill(skillId: Int!, level: Int!): Skill
}